version: "3.9"

volumes:
  pg_data_todolist:
  django_static:


services:
  postgres:
    image: postgres:12.4-alpine
    restart: on-failure
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data_todolist:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 3s
      retries: 3

  api:
    image: ${DOCKERHUB_USERNAME}/todolist:latest
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy

  collect_static:
    image: ${DOCKERHUB_USERNAME}/todolist:latest
    env_file:
      - ./.env
    entrypoint: ''
    volumes:
      - django_static:/opt/static/
#      - ./static:/opt/static/
    command: python3 manage.py collectstatic -c --no-input

  bot:
    image: ${DOCKERHUB_USERNAME}/todolist:latest
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
    command: python3 manage.py runbot

  frontend:
    image: sermalenk/skypro-front:lesson-38
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
#      - ../static/:/opt/static/
      - django_static:/usr/share/nginx/html/static/
#      - ./static:/opt/static/
